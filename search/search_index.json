{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"A Python package for efficient decomposition of satellite images in a Quad-Tree structure \ud83d\ude80 GitHub : https://github.com/IPL-UV/satcompression \ud83c\udf10 PyPI : https://pypi.org/project/satcompression/ \ud83d\udee0\ufe0f Overview \ud83d\udcca satcompression is a Python package designed for efficient compression and decompression of satellite images using a Quad-Tree structure. The package provides a structured way to partition satellite images into hierarchical blocks, enabling efficient image storage, analysis, and pseudo-MTF (Modulation Transfer Function) calculations based on the compression. Key features \u2728 Quad-Tree compression : Efficiently compress satellite images by recursively subdividing the image into smaller blocks based on pixel variability. \ud83d\uddbc\ufe0f Image reconstruction : Restore compressed images to their original state from the Quad-Tree structure. \ud83d\udcc2 Pseudo-MTF calculation : Obtain pseudo-MTF values from the quadtree structure to assess the impact of compression on image sharpness. \ud83d\udcc8 Classification map : Generate a classification map of the nodes in the Quad-Tree structure based on compression detail thresholds. \ud83d\uddfa\ufe0f Installation \u2699\ufe0f Install the latest version from PyPI: pip install satcompression How to use \ud83d\udee0\ufe0f Compression and decompression of satellite images \ud83d\udef0\ufe0f Load libraries import satcompression import rasterio as rio Load an image with rio . open ( 'path/to/image.tif' ) as src : image_meta = src . meta image_data = src . read () Compress the image image_data_compress = satcompression . compress_and_encode_image_data ( image_data = image_data , detail_error_threshold = 20 ) Decompress the image image_data_decompress = satcompression . reconstruct_image_data ( data = image_data_compress , dtype = image_data . dtype , nchannels = image_data . shape [ 0 ] ) Calculate pseudo-MTF from Quad-Tree decomposition \ud83d\udcca Load libraries import satcompression import matplotlib.pyplot as plt Obtain pseudo-MTF values with rio . open ( 'path/to/image.tif' ) as src : image_data = src . read () # Calculate pseudo-MTF with different detail error thresholds mtf_values1 , x_axis1 = satcompression . quadtree_mtf ( image_data , 10 , detail_error_threshold = 20 ) mtf_values2 , x_axis2 = satcompression . quadtree_mtf ( image_data , 10 , detail_error_threshold = 10 ) mtf_values3 , x_axis3 = satcompression . quadtree_mtf ( image_data , 10 , detail_error_threshold = 5 ) # Plot the pseudo-MTF results plt . plot ( x_axis1 , mtf_values1 , label = \"Detail Error Threshold: 20\" ) plt . plot ( x_axis2 , mtf_values2 , label = \"Detail Error Threshold: 10\" ) plt . plot ( x_axis3 , mtf_values3 , label = \"Detail Error Threshold: 5\" ) plt . legend () plt . ylim ( 0 , 1.2 ) plt . title ( \"Pseudo-MTF obtained from the quadtree decomposition\" ) plt . show () Create a classification map from the Quad-Tree nodes \ud83d\uddfa\ufe0f Load libraries import satcompression Generate classification map from Quad-Tree compression with rio . open ( 'path/to/image.tif' ) as src : image_data = src . read () satcompression . create_classification_map ( image_data , detail_error_threshold = 20 )","title":"Index"},{"location":"index.html#_1","text":"A Python package for efficient decomposition of satellite images in a Quad-Tree structure \ud83d\ude80 GitHub : https://github.com/IPL-UV/satcompression \ud83c\udf10 PyPI : https://pypi.org/project/satcompression/ \ud83d\udee0\ufe0f","title":""},{"location":"index.html#overview","text":"satcompression is a Python package designed for efficient compression and decompression of satellite images using a Quad-Tree structure. The package provides a structured way to partition satellite images into hierarchical blocks, enabling efficient image storage, analysis, and pseudo-MTF (Modulation Transfer Function) calculations based on the compression.","title":"Overview \ud83d\udcca"},{"location":"index.html#key-features","text":"Quad-Tree compression : Efficiently compress satellite images by recursively subdividing the image into smaller blocks based on pixel variability. \ud83d\uddbc\ufe0f Image reconstruction : Restore compressed images to their original state from the Quad-Tree structure. \ud83d\udcc2 Pseudo-MTF calculation : Obtain pseudo-MTF values from the quadtree structure to assess the impact of compression on image sharpness. \ud83d\udcc8 Classification map : Generate a classification map of the nodes in the Quad-Tree structure based on compression detail thresholds. \ud83d\uddfa\ufe0f","title":"Key features \u2728"},{"location":"index.html#installation","text":"Install the latest version from PyPI: pip install satcompression","title":"Installation \u2699\ufe0f"},{"location":"index.html#how-to-use","text":"","title":"How to use \ud83d\udee0\ufe0f"},{"location":"index.html#compression-and-decompression-of-satellite-images","text":"","title":"Compression and decompression of satellite images \ud83d\udef0\ufe0f"},{"location":"index.html#load-libraries","text":"import satcompression import rasterio as rio","title":"Load libraries"},{"location":"index.html#load-an-image","text":"with rio . open ( 'path/to/image.tif' ) as src : image_meta = src . meta image_data = src . read ()","title":"Load an image"},{"location":"index.html#compress-the-image","text":"image_data_compress = satcompression . compress_and_encode_image_data ( image_data = image_data , detail_error_threshold = 20 )","title":"Compress the image"},{"location":"index.html#decompress-the-image","text":"image_data_decompress = satcompression . reconstruct_image_data ( data = image_data_compress , dtype = image_data . dtype , nchannels = image_data . shape [ 0 ] )","title":"Decompress the image"},{"location":"index.html#calculate-pseudo-mtf-from-quad-tree-decomposition","text":"","title":"Calculate pseudo-MTF from Quad-Tree decomposition \ud83d\udcca"},{"location":"index.html#load-libraries_1","text":"import satcompression import matplotlib.pyplot as plt","title":"Load libraries"},{"location":"index.html#obtain-pseudo-mtf-values","text":"with rio . open ( 'path/to/image.tif' ) as src : image_data = src . read () # Calculate pseudo-MTF with different detail error thresholds mtf_values1 , x_axis1 = satcompression . quadtree_mtf ( image_data , 10 , detail_error_threshold = 20 ) mtf_values2 , x_axis2 = satcompression . quadtree_mtf ( image_data , 10 , detail_error_threshold = 10 ) mtf_values3 , x_axis3 = satcompression . quadtree_mtf ( image_data , 10 , detail_error_threshold = 5 ) # Plot the pseudo-MTF results plt . plot ( x_axis1 , mtf_values1 , label = \"Detail Error Threshold: 20\" ) plt . plot ( x_axis2 , mtf_values2 , label = \"Detail Error Threshold: 10\" ) plt . plot ( x_axis3 , mtf_values3 , label = \"Detail Error Threshold: 5\" ) plt . legend () plt . ylim ( 0 , 1.2 ) plt . title ( \"Pseudo-MTF obtained from the quadtree decomposition\" ) plt . show ()","title":"Obtain pseudo-MTF values"},{"location":"index.html#create-a-classification-map-from-the-quad-tree-nodes","text":"","title":"Create a classification map from the Quad-Tree nodes \ud83d\uddfa\ufe0f"},{"location":"index.html#load-libraries_2","text":"import satcompression","title":"Load libraries"},{"location":"index.html#generate-classification-map-from-quad-tree-compression","text":"with rio . open ( 'path/to/image.tif' ) as src : image_data = src . read () satcompression . create_classification_map ( image_data , detail_error_threshold = 20 )","title":"Generate classification map from Quad-Tree compression"},{"location":"CHANGELOG.html","text":"Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . [Unreleased] Added Improved efficiency of Quad-Tree compression for larger satellite images. Support for advanced pseudo-MTF calculations based on image compression levels. Enhanced classification map generation for compressed images. Changed Optimized image reconstruction speed after decompression. Updated documentation with more detailed examples and improved clarity. Fixed Fixed issue where memory usage spiked during large image decompression. Resolved bug causing incorrect detail error thresholds in the compression algorithm. [0.0.3] - 2024-07-13 Added Added new API for creating classification maps based on Quad-Tree compression. Fine-tuning options for adjusting the detail error threshold in image compression. Changed Improved performance of pseudo-MTF calculations for compressed images. [0.0.2] - 2024-07-12 Added Introduced support for multi-channel satellite images in compression and reconstruction processes. Enhanced image compression using a customizable Quad-Tree structure. Fixed Fixed memory leak issue when processing large satellite images during compression. [0.0.1] - 2024-07-12 Added Initial release of satcompression with basic Quad-Tree compression and decompression functionality for satellite images. Support for encoding and decoding image data using the Quad-Tree structure.","title":"Changelog"},{"location":"CHANGELOG.html#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"CHANGELOG.html#unreleased","text":"","title":"[Unreleased]"},{"location":"CHANGELOG.html#added","text":"Improved efficiency of Quad-Tree compression for larger satellite images. Support for advanced pseudo-MTF calculations based on image compression levels. Enhanced classification map generation for compressed images.","title":"Added"},{"location":"CHANGELOG.html#changed","text":"Optimized image reconstruction speed after decompression. Updated documentation with more detailed examples and improved clarity.","title":"Changed"},{"location":"CHANGELOG.html#fixed","text":"Fixed issue where memory usage spiked during large image decompression. Resolved bug causing incorrect detail error thresholds in the compression algorithm.","title":"Fixed"},{"location":"CHANGELOG.html#003-2024-07-13","text":"","title":"[0.0.3] - 2024-07-13"},{"location":"CHANGELOG.html#added_1","text":"Added new API for creating classification maps based on Quad-Tree compression. Fine-tuning options for adjusting the detail error threshold in image compression.","title":"Added"},{"location":"CHANGELOG.html#changed_1","text":"Improved performance of pseudo-MTF calculations for compressed images.","title":"Changed"},{"location":"CHANGELOG.html#002-2024-07-12","text":"","title":"[0.0.2] - 2024-07-12"},{"location":"CHANGELOG.html#added_2","text":"Introduced support for multi-channel satellite images in compression and reconstruction processes. Enhanced image compression using a customizable Quad-Tree structure.","title":"Added"},{"location":"CHANGELOG.html#fixed_1","text":"Fixed memory leak issue when processing large satellite images during compression.","title":"Fixed"},{"location":"CHANGELOG.html#001-2024-07-12","text":"","title":"[0.0.1] - 2024-07-12"},{"location":"CHANGELOG.html#added_3","text":"Initial release of satcompression with basic Quad-Tree compression and decompression functionality for satellite images. Support for encoding and decoding image data using the Quad-Tree structure.","title":"Added"},{"location":"CODE_OF_CONDUCT.html","text":"Contributor covenant code of conduct \ud83d\udcdc Our pledge \ud83e\udd1d In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. \ud83c\udf0e\ud83e\udd17 Our standards \ud83d\udccf Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language. \ud83d\ude0a Being respectful of differing viewpoints and experiences. \ud83e\udd14\ud83d\udc42 Gracefully accepting constructive criticism. \ud83d\udee0\ufe0f Focusing on what is best for the community. \ud83e\udd32 Showing empathy towards other community members. \ud83e\udd7a\u2764\ufe0f Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances. \ud83d\udeab\ud83d\udcac Trolling, insulting/derogatory comments, and personal or political attacks. \ud83d\udeab\ud83d\ude20 Public or private harassment. \ud83d\udeab\ud83d\udc65 Publishing others' private information, such as a physical or electronic address, without explicit permission. \ud83d\udeab\ud83c\udfe1 Other conduct which could reasonably be considered inappropriate in a professional setting. \ud83d\udeab\ud83d\udc54 Our responsibilities \ud83d\udee1\ufe0f Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope \ud83c\udf10 This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement \ud83d\udea8 All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution \ud83d\udc4f This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Code of conduct"},{"location":"CODE_OF_CONDUCT.html#contributor-covenant-code-of-conduct","text":"","title":"Contributor covenant code of conduct \ud83d\udcdc"},{"location":"CODE_OF_CONDUCT.html#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. \ud83c\udf0e\ud83e\udd17","title":"Our pledge \ud83e\udd1d"},{"location":"CODE_OF_CONDUCT.html#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language. \ud83d\ude0a Being respectful of differing viewpoints and experiences. \ud83e\udd14\ud83d\udc42 Gracefully accepting constructive criticism. \ud83d\udee0\ufe0f Focusing on what is best for the community. \ud83e\udd32 Showing empathy towards other community members. \ud83e\udd7a\u2764\ufe0f Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances. \ud83d\udeab\ud83d\udcac Trolling, insulting/derogatory comments, and personal or political attacks. \ud83d\udeab\ud83d\ude20 Public or private harassment. \ud83d\udeab\ud83d\udc65 Publishing others' private information, such as a physical or electronic address, without explicit permission. \ud83d\udeab\ud83c\udfe1 Other conduct which could reasonably be considered inappropriate in a professional setting. \ud83d\udeab\ud83d\udc54","title":"Our standards \ud83d\udccf"},{"location":"CODE_OF_CONDUCT.html#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our responsibilities \ud83d\udee1\ufe0f"},{"location":"CODE_OF_CONDUCT.html#scope","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope \ud83c\udf10"},{"location":"CODE_OF_CONDUCT.html#enforcement","text":"All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement \ud83d\udea8"},{"location":"CODE_OF_CONDUCT.html#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Attribution \ud83d\udc4f"},{"location":"CONTRIBUTING.html","text":"Contributing \ud83e\udd1d We welcome contributions from the community! Every contribution, no matter how small, is appreciated and credited. Here\u2019s how you can get involved: How to contribute \ud83d\udee0\ufe0f Fork the repository: Start by forking the satcompression repository to your GitHub account. \ud83c\udf74 Clone your fork locally: cd <directory_in_which_repo_should_be_created> git clone https://github.com/IPL-UV/satcompression.git cd satcompression Create a branch: Create a new branch for your feature or bug fix: git checkout -b name-of-your-bugfix-or-feature Set up the environment: \ud83c\udf31 If you're using pyenv , select a Python version: pyenv local <x.y.z> Install dependencies and activate the environment: poetry install poetry shell Install pre-commit hooks: poetry run pre-commit install Make your changes: \ud83d\udd8b\ufe0f Develop your feature or fix, ensuring you write clear, concise commit messages and include any necessary tests. Check your changes: \u2705 Run formatting checks: make check Run unit tests: make test Optionally, run tests across different Python versions using tox: tox Submit a pull request: \ud83d\ude80 Push your branch to GitHub and submit a pull request to the develop branch of the satcompression repository. Ensure your pull request meets these guidelines: Include tests. Update the documentation if your pull request adds functionality. Provide a detailed description of your changes. Types of contributions \ud83d\udce6 Report bugs: \ud83d\udc1b Report bugs by creating an issue on the satcompression GitHub repository . Please include your operating system, setup details, and steps to reproduce the bug. Fix bugs: \ud83d\udee0\ufe0f Look for issues tagged with \"bug\" and \"help wanted\" in the repository to start fixing. Implement features: \u2728 Contribute by implementing features tagged with \"enhancement\" and \"help wanted.\" Write documentation: \ud83d\udcda Contribute to the documentation in the official docs, docstrings, or through blog posts and articles. Submit feedback: \ud83d\udcac Propose new features or give feedback by filing an issue on GitHub. Use the satcompression GitHub issues page for feedback.","title":"Contributing"},{"location":"CONTRIBUTING.html#contributing","text":"We welcome contributions from the community! Every contribution, no matter how small, is appreciated and credited. Here\u2019s how you can get involved:","title":"Contributing \ud83e\udd1d"},{"location":"CONTRIBUTING.html#how-to-contribute","text":"Fork the repository: Start by forking the satcompression repository to your GitHub account. \ud83c\udf74 Clone your fork locally: cd <directory_in_which_repo_should_be_created> git clone https://github.com/IPL-UV/satcompression.git cd satcompression Create a branch: Create a new branch for your feature or bug fix: git checkout -b name-of-your-bugfix-or-feature Set up the environment: \ud83c\udf31 If you're using pyenv , select a Python version: pyenv local <x.y.z> Install dependencies and activate the environment: poetry install poetry shell Install pre-commit hooks: poetry run pre-commit install Make your changes: \ud83d\udd8b\ufe0f Develop your feature or fix, ensuring you write clear, concise commit messages and include any necessary tests. Check your changes: \u2705 Run formatting checks: make check Run unit tests: make test Optionally, run tests across different Python versions using tox: tox Submit a pull request: \ud83d\ude80 Push your branch to GitHub and submit a pull request to the develop branch of the satcompression repository. Ensure your pull request meets these guidelines: Include tests. Update the documentation if your pull request adds functionality. Provide a detailed description of your changes.","title":"How to contribute \ud83d\udee0\ufe0f"},{"location":"CONTRIBUTING.html#types-of-contributions","text":"Report bugs: \ud83d\udc1b Report bugs by creating an issue on the satcompression GitHub repository . Please include your operating system, setup details, and steps to reproduce the bug. Fix bugs: \ud83d\udee0\ufe0f Look for issues tagged with \"bug\" and \"help wanted\" in the repository to start fixing. Implement features: \u2728 Contribute by implementing features tagged with \"enhancement\" and \"help wanted.\" Write documentation: \ud83d\udcda Contribute to the documentation in the official docs, docstrings, or through blog posts and articles. Submit feedback: \ud83d\udcac Propose new features or give feedback by filing an issue on GitHub. Use the satcompression GitHub issues page for feedback.","title":"Types of contributions \ud83d\udce6"}]}